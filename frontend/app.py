"""
–§–∞–π–ª app.py ‚Äî —è–¥—Ä–æ Streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º).
1) –°–æ–∑–¥–∞–µ—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å:
    1.1 –ó–∞–≥–æ–ª–æ–≤–∫–æ–º (st.title("üìù –£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∞–º–º–∞—Ä–∏ —Ç–µ–∫—Å—Ç–∞"))
    1.2 –û–ø–∏—Å–∞–Ω–∏–µ–º (st.markdown())
    1.3 –≠–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏, —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ, –∑–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤)
2) –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥::
    2.1 –ß–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ (–ø—Ä—è–º–æ–π –≤–≤–æ–¥)
    2.2 –ß–µ—Ä–µ–∑ –∑–∞–≥—Ä—É–∑–∫—É .txt-—Ñ–∞–π–ª–∞ (st.file_uploader)
3) –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ –±—ç–∫–µ–Ω–¥—É (FastAPI): –ø–µ—Ä–µ–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ /summarize —ç–Ω–¥–ø–æ–∏–Ω—Ç
4) –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∞–º–º–∞—Ä–∏
5) –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏:
    5.1 –û–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±—ç–∫–µ–Ω–¥—É
    5.2 –ó–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤
    5.3 –û–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞

"""

# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import streamlit as st  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
import requests         # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ backend

# URL backend —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
BACKEND_URL = "http://backend:8000/summarize"


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit

    """

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üìù –£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∞–º–º–∞—Ä–∏ —Ç–µ–∫—Å—Ç–∞")
    st.markdown("""
        –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å BART-large-CNN –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∞—Ç–∫–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª–∏–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    """)

    # –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ (—Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏)
    input_method = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤–≤–æ–¥–∞:", ("–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ", "–§–∞–π–ª"))
    # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    text = ""

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –≤–≤–æ–¥–∞
    if input_method == "–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ":
        # –ë–æ–ª—å—à–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏:", height=300,
                            placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–æ–π –¥–æ 1000 —Å–ª–æ–≤...")
    else:
        # –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ .txt)
        uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", type=['txt'])
        if uploaded_file:
            if uploaded_file.type == "text/plain":
                # –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ UTF-8
                text = str(uploaded_file.read(), "utf-8")
            else:
                st.warning("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ TXT —Ñ–∞–π–ª—ã –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏")

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ (–∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç)
    if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–º–∞—Ä–∏") and text:
        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç..."):        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            try:
                # –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É
                words_count = len(text.split())
                chars_count = len(text)
                st.info(f"–¢–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç: {words_count} —Å–ª–æ–≤, {chars_count} —Å–∏–º–≤–æ–ª–æ–≤")

                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ backend API
                response = requests.post(BACKEND_URL, json={"text": text})

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
                if response.status_code == 200:
                    result = response.json()
                    if "summary" in result:
                        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
                        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏:")
                        st.write(result["summary"])

                        # –†–∞—Å—á–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∂–∞—Ç–∏—è
                        summary_length = len(result["summary"].split())
                        ratio = summary_length / words_count * 100
                        st.success(
                            f"–°–∂–∞—Ç–∏–µ: {words_count} ‚Üí {summary_length} —Å–ª–æ–≤ "
                            f"({ratio:.1f}% –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞)"
                        )
                    else:
                        # –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–¥–µ–ª—å—é)
                        st.error(f"–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                else:
                    # –û—à–∏–±–∫–∞ HTTP-–∑–∞–ø—Ä–æ—Å–∞
                    st.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            except Exception as e:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º)
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}")


# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
if __name__ == "__main__":
    main()